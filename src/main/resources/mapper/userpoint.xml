<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.library.bookhub.repository.UserPointRepository">

	<select id="findAll"
		resultType="com.library.bookhub.entity.UserPoint">
		select * from bh_user_point

	</select>
	

	<select id="findAllUserPointPaging"
		resultType="com.library.bookhub.entity.UserPoint">
		SELECT * FROM bh_user_point WHERE LOWER(user_id) LIKE
		CONCAT('%', LOWER(#{userId}), '%') LIMIT #{limit} OFFSET #{offset}
	</select>



	<select id="getTotalCount" resultType="int">
		SELECT COUNT(*) FROM
		bh_user_point
	</select>
	
	
	<select id="refundReq" resultType="com.library.bookhub.entity.UserPoint">
	
	select * from BH_USER_POINT where refund_yn like '환불요청';
	</select>




	<!-- 저장 함수 매핑 -->
	<insert id="save"
		parameterType="com.library.bookhub.entity.UserPoint">
		INSERT INTO bh_user_point (user_id, point_name,
		purchase_date, point, price,
		imp_uid, merchant_uid)
		VALUES (#{userId},
		#{pointName}, #{purchaseDate}, #{point}, #{price}, #{impUid},
		#{merchantUid})
	</insert>

	<!-- 수정 함수 매핑 -->
	<update id="update"
		parameterType="com.library.bookhub.entity.UserPoint">
		UPDATE bh_user_point
		SET userId = #{userId}, pointName =
		#{pointName}, purchaseDate =
		#{purchaseDate}, point = #{point},
		refundYn = #{refundYn}, impUid = #{impUid}, merchantUid =
		#{merchantUid}
		WHERE id = #{id}
	</update>
	
	<update id="refundUpdate" parameterType="com.library.bookhub.entity.UserPoint">
	UPDATE bh_user_point
		SET refund_yn = #{refundYn}
	WHERE id = #{id}
	</update>


	<update id="updatePoint" parameterType="com.library.bookhub.entity.UserPoint">
		UPDATE bh_user_point
		SET point = #{point}
		WHERE id = #{id}s
	</update>

	<!-- 삭제 함수 매핑 -->
	<delete id="deleteById" parameterType="int">
		DELETE FROM bh_user_point
		WHERE id = #{id}
	</delete>

	<!-- 기본키(id)가 있는지 확인하는 조회 함수 매핑 -->
	<select id="existById" parameterType="int" resultType="long">
		SELECT
		COUNT(*)
		FROM bh_user_point
		WHERE id = #{id}
	</select>

	<!-- 상세 조회(1건 조회) 함수 매핑 -->
	<select id="findById" parameterType="int"
		resultType="com.library.bookhub.entity.UserPoint">
		SELECT *
		FROM bh_user_point
		WHERE id = #{id}
	</select>

	<!-- 사용자 식별자로 사용자 포인트 정보 조회 함수 매핑 -->
	<select id="findByUserId" 
		resultType="com.library.bookhub.entity.UserPoint">
		SELECT *
		FROM bh_user_point
		WHERE user_id = #{userId}
	</select>


	<select id="getUser"
		resultType="com.library.bookhub.entity.User">
		select * from bh_member where userName = #{userName};
	</select>
	
	
	<select id="findByPrice" resultType="long">
	select sum(price) from BH_USER_POINT
	where refund_yn = '미환불'
	</select>

</mapper>
